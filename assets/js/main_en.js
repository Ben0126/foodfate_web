// 英文版內測資訊顯示
function showBetaInfo(platform) {
    const modal = document.getElementById('documentModal');
    const content = document.getElementById('modalContent');
    
    let body = '';
    
    if (platform === 'android') {
        body = `
            <h2>📱 Android Beta Version</h2>
            <div style="background: #f8f9fa; padding: 1rem; border-radius: 8px; margin: 1rem 0;">
                <h3 style="color: #FF6B35;">🚀 Early Access</h3>
                <p>Thank you for your interest in Foodfate! We're currently conducting beta testing and welcome you to join our testing community.</p>
            </div>
            
            <div id="apkDownloadSection">
                <h3>📦 APK Download</h3>
                <div class="download-options">
                    <button onclick="downloadAPK('latest')" class="btn btn-primary">
                        <span>📱</span> Download Latest Version (v0.0.38-beta)
                    </button>
                </div>
                
                <div class="apk-info" style="margin-top: 1rem; padding: 1rem; background: rgba(255, 107, 53, 0.1); border-radius: 8px;">
                    <h4 style="color: #FF6B35;">⚠️ Installation Notes</h4>
                    <ul style="color: #666; font-size: 0.9rem;">
                        <li>Requires Android 7.0 (API level 24) or higher</li>
                        <li>First-time installation requires allowing "Unknown sources"</li>
                        <li>Recommend uninstalling old version before installing new one</li>
                        <li>Beta version may have stability issues, please be patient</li>
                    </ul>
                </div>
            </div>
            
            <h3>📋 Simple Beta Application</h3>
            <div style="background: rgba(255, 107, 53, 0.1); padding: 1.5rem; border-radius: 10px; text-align: center;">
                <h4 style="color: #FF6B35; margin-bottom: 1rem;">🚀 One-Click Beta Application</h4>
                <p style="margin-bottom: 1rem; color: #666;">Click the button below to auto-generate application email</p>
                <button onclick="sendBetaRequestEN()" class="btn btn-primary" style="font-size: 1.1rem; padding: 0.8rem 2rem;">
                    📧 Apply for Beta Now
                </button>
                <p style="margin-top: 0.5rem; font-size: 0.9rem; color: #888;">
                    Will automatically open your email application
                </p>
            </div>
            
            <h3>🎯 Beta Testing Benefits</h3>
            <ul>
                <li>✅ Early access to latest features</li>
                <li>✅ Direct communication with development team</li>
                <li>✅ Influence product development direction</li>
                <li>✅ Early bird discounts when official version launches</li>
            </ul>
            
            <div style="background: rgba(255, 107, 53, 0.1); padding: 1rem; border-radius: 8px; margin: 1rem 0;">
                <h4 style="color: #FF6B35;">💡 Can't download right now?</h4>
                <p style="margin: 0;">We recommend trying the <a href="https://app.foodfate.xyz" target="_blank" style="color: #FF6B35; font-weight: bold;">Web version</a> first for the complete Foodfate experience!</p>
            </div>
        `;
    }
    
    content.innerHTML = body;
    modal.style.display = 'block';
}

// 英文版一鍵內測申請
function sendBetaRequestEN() {
    const subject = encodeURIComponent('[Foodfate Beta Application] I want to join the beta program');
    const body = encodeURIComponent(`Dear Foodfate Team,

I'm very interested in the Foodfate app and would like to join the beta testing program.

My basic information:
- Name: [Please fill in your name]
- Device: [e.g., iPhone 12 / Samsung Galaxy S21]
- Expected usage scenarios: [e.g., daily dining choices / use when dining with friends]

Thank you!

This email was automatically generated by the Foodfate website
`);
    
    const mailtoLink = `mailto:foodfate2025@gmail.com?subject=${subject}&body=${body}`;
    
    // 打開郵件應用程式
    window.location.href = mailtoLink;
    
    // 顯示提示
    showNotificationEN('Beta application email has been generated, please complete the information and send!', 'success');
}

// APK 下載功能
function downloadAPK(version) {
    const apkUrls = {
        'latest': '/downloads/foodfate_app_v0.0.38-beta.apk',
        // 'stable': '/downloads/foodfate-v0.9.5-beta.apk'
    };
    
    const downloadUrl = apkUrls[version];
    
    if (downloadUrl) {
        const link = document.createElement('a');
        link.href = downloadUrl;
        link.download = `foodfate-${version}.apk`;
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        
        showNotificationEN(`Downloading Foodfate ${version} version...`, 'success');
    } else {
        showNotificationEN('Download link temporarily unavailable, please try again later', 'error');
    }
}

// 英文版通知功能
function showNotificationEN(message, type = 'info') {
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.innerHTML = `
        <div class="notification-content">
            <span>${message}</span>
            <button onclick="this.parentElement.parentElement.remove()">✕</button>
        </div>
    `;
    
    notification.style.cssText = `
        position: fixed;
        top: 100px;
        right: 20px;
        background: ${type === 'success' ? '#4CAF50' : type === 'error' ? '#f44336' : '#2196F3'};
        color: white;
        padding: 1rem;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.3);
        z-index: 3000;
        max-width: 300px;
        animation: slideInRight 0.3s ease;
    `;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
        if (notification.parentElement) {
            notification.remove();
        }
    }, 5000);
}

// 關閉 modal
function closeModal() {
    const modal = document.getElementById('documentModal');
    modal.style.display = 'none';
}

// 點擊外部關閉 modal
window.onclick = function(event) {
    const modal = document.getElementById('documentModal');
    if (event.target == modal) {
        modal.style.display = 'none';
    }
}

// 移動端菜單
document.addEventListener('DOMContentLoaded', function() {
    // Mobile menu
    const mobileMenuBtn = document.querySelector('.mobile-menu-btn');
    const navLinks = document.querySelector('.nav-links');
    
    if (mobileMenuBtn) {
        mobileMenuBtn.addEventListener('click', function() {
            navLinks.classList.toggle('active');
        });
    }
    
    // Initialize waitlist for English version
    initWaitlistEN();
});

// English version waitlist functionality
function initWaitlistEN() {
    const waitlistShown = localStorage.getItem('waitlistShown');
    const waitlistClosed = localStorage.getItem('waitlistClosed');
    
    // Show after 3 seconds if never shown and not closed
    if (!waitlistShown && !waitlistClosed) {
        setTimeout(() => {
            showWaitlist();
        }, 3000);
    }
    
    // Bind form submit event
    const waitlistForm = document.getElementById('waitlistForm');
    if (waitlistForm) {
        waitlistForm.addEventListener('submit', handleWaitlistSubmitEN);
    }
}

function showWaitlist() {
    const overlay = document.getElementById('waitlistOverlay');
    if (overlay) {
        overlay.classList.add('active');
        localStorage.setItem('waitlistShown', 'true');
        
        // Track display event
        if (typeof gtag !== 'undefined') {
            gtag('event', 'waitlist_shown', {
                'event_category': 'engagement',
                'event_label': 'modal_display',
                'value': 1
            });
        }
    }
}

function closeWaitlist() {
    const overlay = document.getElementById('waitlistOverlay');
    if (overlay) {
        overlay.classList.remove('active');
        localStorage.setItem('waitlistClosed', 'true');
        localStorage.setItem('waitlistClosedTime', Date.now());
        
        // Track close event
        if (typeof gtag !== 'undefined') {
            gtag('event', 'waitlist_closed', {
                'event_category': 'engagement',
                'event_label': 'modal_close',
                'value': 1
            });
        }
    }
}

function handleWaitlistSubmitEN(e) {
    e.preventDefault();
    
    const name = document.getElementById('waitlistName').value.trim();
    const email = document.getElementById('waitlistEmail').value.trim();
    const submitBtn = document.getElementById('waitlistSubmit');
    const submitText = document.getElementById('submitText');
    const messageDiv = document.getElementById('waitlistMessage');
    
    // Basic validation
    if (!name || !email) {
        showWaitlistMessageEN('Please fill in all required fields', 'error');
        return;
    }
    
    // Email format validation
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
        showWaitlistMessageEN('Please enter a valid email address', 'error');
        return;
    }
    
    // Check if already registered
    const existingEmail = localStorage.getItem('waitlistEmail');
    if (existingEmail === email) {
        showWaitlistMessageEN('This email is already on the waitlist', 'error');
        return;
    }
    
    // Set loading state
    submitBtn.disabled = true;
    submitText.innerHTML = '<span class="waitlist-loading"></span>Submitting...';
    
    // Simulate API request
    setTimeout(() => {
        // 90% success rate simulation
        const success = Math.random() > 0.1;
        
        if (success) {
            // Success handling
            localStorage.setItem('waitlistEmail', email);
            localStorage.setItem('waitlistName', name);
            localStorage.setItem('waitlistSignupTime', Date.now());
            
            showWaitlistMessageEN('🎉 Congratulations! You have successfully joined the waitlist! We will notify you as soon as the new version is available.', 'success');
            
            // Track success event
            if (typeof gtag !== 'undefined') {
                gtag('event', 'waitlist_signup', {
                    'event_category': 'conversion',
                    'event_label': 'email_signup',
                    'value': 1
                });
            }
            
            // Hide form, show success state
            const form = document.getElementById('waitlistForm');
            form.style.display = 'none';
            
            // Auto close after 3 seconds
            setTimeout(() => {
                closeWaitlist();
            }, 3000);
            
        } else {
            // Failure handling
            showWaitlistMessageEN('Submission failed, please try again later', 'error');
            
            // Track failure event
            if (typeof gtag !== 'undefined') {
                gtag('event', 'waitlist_error', {
                    'event_category': 'error',
                    'event_label': 'submission_failed',
                    'value': 1
                });
            }
        }
        
        // Reset button state
        submitBtn.disabled = false;
        submitText.textContent = 'Join Waitlist';
        
    }, 2000); // Simulate 2 seconds network request time
}

function showWaitlistMessageEN(message, type) {
    const messageDiv = document.getElementById('waitlistMessage');
    if (messageDiv) {
        messageDiv.textContent = message;
        messageDiv.className = `waitlist-message ${type}`;
        messageDiv.classList.add('show');
        
        // Hide error messages after 3 seconds
        if (type === 'error') {
            setTimeout(() => {
                messageDiv.classList.remove('show');
            }, 3000);
        }
    }
}

// Reopen waitlist (for testing)
function reopenWaitlist() {
    localStorage.removeItem('waitlistShown');
    localStorage.removeItem('waitlistClosed');
    showWaitlist();
}